package eu.stamp.botsing;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;

public class FileUtilityTest {

	@Rule
	public TemporaryFolder tmpFolder = new TemporaryFolder();

	@Test
	public void searchShouldNotfindEmptyRegex() throws IOException {

		String javaTest = "/*\n" +
				" * This file was automatically generated by EvoSuite\n" +
				" * Tue Apr 30 13:08:46 GMT 2019\n" +
				" */\n" +
				"\n" +
				"package eu.stamp.botsing;\n" +
				"\n" +
				"import org.junit.Test;\n" +
				"import static org.junit.Assert.*;\n" +
				"import static org.evosuite.runtime.EvoAssertions.*;\n" +
				"import eu.stamp.botsing.Fraction;\n" +
				"import org.evosuite.runtime.EvoRunner;\n" +
				"import org.evosuite.runtime.EvoRunnerParameters;\n" +
				"import org.junit.runner.RunWith;\n" +
				"\n" +
				"@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) \n" +
				"public class Fraction_ESTest extends Fraction_ESTest_scaffolding {\n" +
				"\n" +
				"  @Test(timeout = 4000)\n" +
				"  public void test0()  throws Throwable  {\n" +
				"      Fraction fraction0 = new Fraction(0, 1);\n" +
				"      // Undeclared exception!\n" +
				"      fraction0.getShiftedValue((-1));\n" +
				"  }\n" +
				"}\n" +
				"";

		// Write Java Test File
		File folderWithTest = tmpFolder.newFolder();
		File javaTestFile = new File(folderWithTest, "javaTestFile.java");
		FileUtils.writeStringToFile(javaTestFile, javaTest, "UTF-8");

		System.out.println("New file '" + javaTestFile.getAbsolutePath() + "' created.");

		assertFalse(FileUtility.search(folderWithTest.getAbsolutePath(), ".*EvoSuite did not generate any tests.*"));
	}

	@Test
	public void searchShouldFindEmptyRegex() throws IOException {

		String emptyJavaTest = "package org.apache.commons.lang3;\n" +
				"\n" +
				"import org.junit.Test;\n" +
				"import static org.junit.Assert.*;\n" +
				"\n" +
				"public class SerializationUtils_ESTest {\n" +
				"  @Test\n" +
				"  public void notGeneratedAnyTest() {\n" +
				"    // EvoSuite did not generate any tests\n" +
				"  }\n" +
				"}";

		// Write empty Java Test File
		File folderWithEmptyTest = tmpFolder.newFolder();
		File emptyJavaTestFile = new File(folderWithEmptyTest, "emptyJavaTestFile.java");
		FileUtils.writeStringToFile(emptyJavaTestFile, emptyJavaTest, "UTF-8");

		System.out.println("New file '" + emptyJavaTestFile.getAbsolutePath() + "' created.");

		assertTrue(FileUtility.search(folderWithEmptyTest.getAbsolutePath(), ".*EvoSuite did not generate any tests.*"));
	}

	@Test
	public void searchInEmptyFolder() throws IOException {

		// Write empty Java Test File
		File emptyFolder = tmpFolder.newFolder();

		System.out.println("Empty folder '" + emptyFolder.getAbsolutePath() + "' created.");

		assertFalse(FileUtility.search(emptyFolder.getAbsolutePath(), ".*EvoSuite did not generate any tests.*"));
	}

	@Test
	public void searchShouldFindEmptyRegexInSubFolders() throws IOException {

		String emptyJavaTest = "package org.apache.commons.lang3;\n" +
				"\n" +
				"import org.junit.Test;\n" +
				"import static org.junit.Assert.*;\n" +
				"\n" +
				"public class SerializationUtils_ESTest {\n" +
				"  @Test\n" +
				"  public void notGeneratedAnyTest() {\n" +
				"    // EvoSuite did not generate any tests\n" +
				"  }\n" +
				"}";

		// Write empty Java Test File
		File subfolder = tmpFolder.newFolder("eu", "stamp");
		File emptyJavaTestFile = new File(subfolder, "emptyJavaTestFile.java");
		FileUtils.writeStringToFile(emptyJavaTestFile, emptyJavaTest, "UTF-8");

		System.out.println("New file '" + emptyJavaTestFile.getAbsolutePath() + "' created.");

		assertTrue(FileUtility.search(subfolder.getAbsolutePath(), ".*EvoSuite did not generate any tests.*"));
	}
}
